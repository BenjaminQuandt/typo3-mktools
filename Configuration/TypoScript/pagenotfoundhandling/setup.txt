config.tx_mktools.pagenotfoundhandling {
    ### Kommaseparierte Liste mit Codes, welche ignoriert werden sollen
    ### Es wird dann kein Exit gemacht, sondern eine einfache Weiterleitung.
    ### 0 => 'Unknown',
    ### 1 => 'ID was not an accessible page',
    ### 2 => 'Subsection was found and not accessible',
    ### 3 => 'ID was outside the domain',
    ### 4 => 'The requested page alias does not exist'

    ### When the codes 1 and 2 are ignored, TYPO3 will render the content of the next page
    ### that can be accessed if a not accessible page was requested. This is often used so
    ### the URL doesn't change for the user and the login can take place with the current URL.
    ### However it is strongly recommended to not ignore those codes or any codes at all.
    ### They are thrown for a reason and shoudl be handled. A better solution would be
    ### to configure the page not found handling for those codes separately (see below) and redirect
    ### to a login page. The login form in turn should redirect back to the referrer.
    ignorecodes = 1,2

    ### Default wird TYPO3_CONF_VARS['FE']['pageNotFound_handling_statheader'] genutzt
    httpStatus =

    ### Der Typ für die Konfiguration (REDIRECT, READFILE)
    type =
    ### Die Daten für den Typ
    data =
    ### Für mehrsprachige Fehlerseiten wird der TS-Pfad zu den jeweiligen Fehlerseiten mit Länderkürzel angegeben
    en.data =
    fr.data =

    ###sollen 404 Zugriffe geloggt werden?
    logPageNotFound = 0

    ### die gesamte Konfig kann auch für jeden der o.g. pageNotFoundCodes einzeln konfiguriert werden
    ### bei diesem Beispiel wird ein redirect auf die Startseite gemacht bei fehlenden Berechtigungen
#    pageNotFoundCodes {
#        1 {
#            type = REDIRECT
#            data = /
#            httpStatus...
#            logPageNotFound...
#        }
#        2 {
#            type = REDIRECT
#            data = /
#        }
#    }

}

### Normally, pageNotFound codes 1 and 2 can be ignored. Through mktools
### then the pageNotFoundHandling is aborted and TYPO3 renders the content. That usually leads to
### TYPO3 rendering the content of the next page that can be accessed. This is usually
### a login form, which is fine. With your own typeNums you will most likely have a plugin
### integrated via TypoScript. Since the code 1 and 2 are ignored, the plugin is always rendered even if the
### requested page is not accessible. Since that maybe
### not desired as the plugin could render access-restricted information, we will ignore codes 1 and 2
### by default not if a separate typeNum is used.
[globalVar = GP:type > 0]
    config.tx_mktools.pagenotfoundhandling.ignorecodes := removeFromList(1,2)
[global]
